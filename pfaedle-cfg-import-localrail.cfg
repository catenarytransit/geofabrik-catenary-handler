
[tram, subway]

# OSM entities to keep on different levels, as k=v. Applies
# to nodes, edges and relations.
# Nodes included in kept ways are always kept.
# Ways included in kept relations are always kept.

osm_filter_keep:
	route=tram
	route=funicular
	railway=subway
	railway=light_rail
	railway=tram
	railway=funicular
	railway=station
	railway=halt
	railway=tram_stop
	route=subway
	route=light_rail
	subway=yes
	tram=yes

osm_filter_lvl2:
	service=siding

osm_filter_lvl3:
	railway=funicular
	route=funicular

osm_filter_lvl5:
	service=crossover
	service=yard

# OSM entities to drop, as k=v. Applies to nodes, edges and
# relations.
# Nodes included in non-dropped ways are kept regardless of
# a matching drop filter.
# Ways included in non-dropped relations are kept regardless of
# a matching drop filter.

osm_filter_drop:
	area=yes
	public_transport=stop_area
	type=multipolygon
	railway=platform
	public_transport=platform
	service=alley

# Nodes that should act as "no-hup" nodes. These are nodes
# that are contained in multiple ways, but cannot be used
# to switch from one way to another (for example, a
# track crossing in rail networks)

osm_filter_nohup:
	railway:switch=no
	railway=railway_crossing

# Edges that should act as one-way nodes.

osm_filter_oneway:
	oneway=yes

# Edges that may explicitely be used in
# both directions. May be used to set exception
# to "osm_filter_oneway"

osm_filter_undirected:

# Nodes that are stations.
# Only nodes that have been kept during the filtering above will be
# checked.
osm_filter_station:
	public_transport=stop_position
	station=subway
	station=tram
	railway=stop
	railway=halt
	railway=station
	railway=tram_stop
	railway=subway_stop
	tram_stop=*
	stop=*

# Relation fields that should be used for catching the lines that
# occur on an edge. Only relations that have been kept during the
# filtering above will be checked. The 'linename' will be normalized
# according to the rules in line_normalization_chain.
# The 'from_name' and 'to_name' will be normalized according to the
# rules in station_normalization_chain.
# The relations tags are given in the order of their relevance -
# the first normalized tag-value that is not null/empty will be
# taken.
osm_line_relation_tags:
	line_name=ref,name   # careful, no space after/before comma allowed!
	from_name=from
	to_name=to

# max distance in meters between a snapped position on an
# edge and the input GTFS/OSM station
osm_max_snap_distance:	100

osm_max_snap_level: 4


# sorted by priority, first found attr will be taken
osm_station_name_attrs:
	name
	uic_name

# the track number tag in stop nodes, first one is taken
osm_track_number_tags:	local_ref

# avg speed on segment levels, in km/h
osm_lvl0_avg_speed:	85  # default level
osm_lvl1_avg_speed:	70
osm_lvl2_avg_speed:	55
osm_lvl3_avg_speed:	40
osm_lvl4_avg_speed:	30
osm_lvl5_avg_speed:	20
osm_lvl6_avg_speed: 10
osm_lvl7_avg_speed:	5

# Punishment (in seconds) to add to the distance
# function if a vehicle performans a full turn
routing_full_turn_penalty:		180    # 3 minutes

# Penalty added to non-station placements
routing_non_station_penalty:        0.4

# If the station name does not match, add this penalty
routing_station_unmatched_penalty: 0.4

# Max angle that should be counted as a full turn
routing_full_turn_angle:			80

# Max angle in a route from a station to an already reachable neighbar
routing_snap_full_turn_angle:	80

# Factor by which the vehicle slows down in a one way street (factor 5
# means it will take 5 times longer)
osm_one_way_speed_penalty_fac: 2

# If a segment has no matching line attributes, multiply the
# time needed to traverse it with the given factor (should
# be > 1 for a punishment, values < 1 will prefer unmatching segments)
routing_line_unmatched_time_penalty_fac:            1.2
routing_line_station_to_unmatched_time_penalty:     1.1
routing_line_station_from_unmatched_time_penalty:   1.05

# If a segment has no line attributes at all, multiply the
# time needed to traverse it with the given factor (should
# be > 1 for a punishment, values < 1 will prefer unmatching segments)
# routing_no_lines_penalty_fac:  1
